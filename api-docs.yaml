openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/user/{userId}:
    get:
      tags:
      - user-controller
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/subCategories/{id}:
    get:
      tags:
      - sub-category-controller
      operationId: getSubCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSubCategory'
    put:
      tags:
      - sub-category-controller
      operationId: updateSubCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSubCategory'
  /api/sliders/{id}:
    put:
      tags:
      - slider-controller
      operationId: updateSlider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              - slider
              type: object
              properties:
                slider:
                  $ref: '#/components/schemas/SliderRequest'
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSlider'
    delete:
      tags:
      - slider-controller
      operationId: deleteSlider
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/products/{id}:
    get:
      tags:
      - product-controller
      operationId: findProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
    put:
      tags:
      - product-controller
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - featureImage
              - imageFiles
              - product
              type: object
              properties:
                product:
                  $ref: '#/components/schemas/ProductRequest'
                featureImage:
                  type: string
                  format: binary
                imageFiles:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/orders/{orderId}:
    put:
      tags:
      - user-controller
      operationId: updateOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOrder'
    delete:
      tags:
      - user-controller
      operationId: destroyOrder
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOrder'
  /api/order/{orderId}:
    put:
      tags:
      - user-controller
      operationId: changeOrderStatus
      parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - WAITING_PROCESS
          - WAITING_DELIVERY
          - SUCCESS
          - CANCEL
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOrder'
  /api/customer/wishlist/{id}:
    put:
      tags:
      - customer-controller
      operationId: removeFromWishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
    post:
      tags:
      - customer-controller
      operationId: addToWishlist
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/customer/detail/{id}:
    get:
      tags:
      - customer-controller
      operationId: getCustomerById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCustomCustomerResponse'
    put:
      tags:
      - customer-controller
      operationId: editCustomer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCustomer'
  /api/customer/cart:
    get:
      tags:
      - customer-controller
      operationId: getShoppingCart
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseShoppingSession'
    put:
      tags:
      - customer-controller
      operationId: updateCurrentCart
      parameters:
      - name: cartItems
        in: query
        required: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListCartItem'
    post:
      tags:
      - customer-controller
      operationId: addItemToCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseShoppingSession'
  /api/customer/address/{addressId}:
    get:
      tags:
      - customer-controller
      operationId: getAddressById
      parameters:
      - name: addressId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddress'
    put:
      tags:
      - customer-controller
      operationId: editAddress
      parameters:
      - name: addressId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddress'
    delete:
      tags:
      - customer-controller
      operationId: deleteAddress
      parameters:
      - name: addressId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddress'
  /api/categories/{id}:
    get:
      tags:
      - category-controller
      operationId: getCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCategory'
    put:
      tags:
      - category-controller
      operationId: updateCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - category
              - category_image
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/CategoryRequest'
                category_image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCategory'
    delete:
      tags:
      - category-controller
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/banners/{id}:
    get:
      tags:
      - banner-controller
      operationId: getBannerById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBanner'
    put:
      tags:
      - banner-controller
      operationId: updateBanner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - banner
              - image
              type: object
              properties:
                banner:
                  $ref: '#/components/schemas/BannerRequest'
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBanner'
    delete:
      tags:
      - banner-controller
      operationId: deleteBanner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/auth/account:
    get:
      tags:
      - auth-controller
      operationId: getCurrentUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
    put:
      tags:
      - auth-controller
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/subCategories:
    get:
      tags:
      - sub-category-controller
      operationId: getAllSubCategory
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageSubCategory'
    post:
      tags:
      - sub-category-controller
      operationId: createNewSubCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubCategoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseSubCategory'
  /api/sliders:
    get:
      tags:
      - slider-controller
      operationId: getAllSlider
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageSlider'
    post:
      tags:
      - slider-controller
      operationId: createNewSlider
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              - slider
              type: object
              properties:
                slider:
                  $ref: '#/components/schemas/SliderRequest'
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSlider'
  /api/products:
    get:
      tags:
      - product-controller
      operationId: getAllProduct
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageProduct'
    post:
      tags:
      - product-controller
      operationId: createNewProduct
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - feature_image
              - imageFiles
              - product
              type: object
              properties:
                product:
                  $ref: '#/components/schemas/ProductRequest'
                feature_image:
                  type: string
                  format: binary
                imageFiles:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseProduct'
  /api/customer/comment:
    post:
      tags:
      - customer-controller
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseComment'
  /api/customer/checkout:
    post:
      tags:
      - customer-controller
      operationId: checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOrder'
  /api/customer/address:
    get:
      tags:
      - customer-controller
      operationId: getAllAddress
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListAddress'
    post:
      tags:
      - customer-controller
      operationId: createNewAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddress'
  /api/categories:
    get:
      tags:
      - category-controller
      operationId: getAllCategory
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageCategory'
    post:
      tags:
      - category-controller
      operationId: createNewCategory
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - category
              - category_image
              type: object
              properties:
                category:
                  $ref: '#/components/schemas/CategoryRequest'
                category_image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCategory'
  /api/banners:
    get:
      tags:
      - banner-controller
      operationId: getAllBanner
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageBanner'
    post:
      tags:
      - banner-controller
      operationId: createNewBanner
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - banner
              - image
              type: object
              properties:
                banner:
                  $ref: '#/components/schemas/BannerRequest'
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseBanner'
  /api/auth/signin:
    post:
      tags:
      - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseJwtResponse'
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageUser'
  /api/users/{role}:
    get:
      tags:
      - user-controller
      operationId: findAllByRole
      parameters:
      - name: role
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageUser'
  /api/top5seller:
    get:
      tags:
      - user-controller
      operationId: getTop5Seller
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListProductTopSellerInterface'
  /api/test/user:
    get:
      tags:
      - test-controller
      operationId: userAccess
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/test/mod:
    get:
      tags:
      - test-controller
      operationId: moderatorAccess
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/test/all:
    get:
      tags:
      - test-controller
      operationId: allAccess
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/test/admin:
    get:
      tags:
      - test-controller
      operationId: adminAccess
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/statistic/success/order:
    get:
      tags:
      - user-controller
      operationId: statisticSuccessOrderAndOrderDateBetween
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageOrder'
  /api/statistic/month:
    get:
      tags:
      - user-controller
      operationId: getValuesByMonth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseStatisticValueResponse'
  /api/statistic/countOrder:
    get:
      tags:
      - user-controller
      operationId: statisticCountOrder
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListCountOrderResponse'
  /api/slider/{id}:
    get:
      tags:
      - slider-controller
      operationId: getSliderById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseSlider'
  /api/roles:
    get:
      tags:
      - role-controller
      operationId: getAllRoles
      parameters:
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageRole'
  /api/quantity:
    get:
      tags:
      - user-controller
      operationId: getStatistic
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseStatisticQuantityResponse'
  /api/products/subCategory/{subCate}:
    get:
      tags:
      - product-controller
      operationId: findProductsBySubCateName
      parameters:
      - name: subCate
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageProduct'
  /api/products/productCode/{productCode}:
    get:
      tags:
      - product-controller
      operationId: getAllProductsByCode
      parameters:
      - name: productCode
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageProduct'
  /api/products/categories/{categoryName}:
    get:
      tags:
      - product-controller
      operationId: findProductsByCategoryName
      parameters:
      - name: categoryName
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageProduct'
  /api/products/10/subCategory/{subCate}:
    get:
      tags:
      - product-controller
      operationId: findTop8BySubCategoryName
      parameters:
      - name: subCate
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListProduct'
  /api/customers:
    get:
      tags:
      - user-controller
      operationId: findAllCustomers
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageCustomer'
  /api/customers/{searchText}:
    get:
      tags:
      - user-controller
      operationId: searchAllCustomers
      parameters:
      - name: searchText
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageCustomer'
  /api/customer/wishlist:
    get:
      tags:
      - customer-controller
      operationId: getUserWishlist
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListProduct'
  /api/customer/products/filter:
    get:
      tags:
      - customer-controller
      operationId: filterProduct
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      - name: categories
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: subCategories
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: firstPrice
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: secondPrice
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchText
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageProduct'
  /api/customer/product/{id}/comment:
    get:
      tags:
      - customer-controller
      operationId: getCommentPagination
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      - name: orderBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageComment'
  /api/customer/orders:
    get:
      tags:
      - customer-controller
      operationId: getCurrentOrders
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - WAITING_PROCESS
          - WAITING_DELIVERY
          - SUCCESS
          - CANCEL
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageOrder'
  /api/customer/orders/{orderCode}:
    get:
      tags:
      - customer-controller
      operationId: getOrderByCode
      parameters:
      - name: orderCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOrder'
  /api/customer/notifications:
    get:
      tags:
      - customer-controller
      operationId: getAllNotifications
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListNotification'
  /api/customer/cart/{id}/total:
    get:
      tags:
      - customer-controller
      operationId: getTotalValues
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseDouble'
  /api/customer/address/default:
    get:
      tags:
      - customer-controller
      operationId: getDefaultAddress
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAddress'
  /api/categories/subCategories:
    get:
      tags:
      - sub-category-controller
      operationId: getSubCategoryDataByCategory
      parameters:
      - name: names
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: categoryId
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListSubCategory'
  /api/admin/orders:
    get:
      tags:
      - user-controller
      operationId: getAllOrders
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageOrder'
  /api/admin/orders/{orderCode}:
    get:
      tags:
      - user-controller
      operationId: getAllOrdersByCode
      parameters:
      - name: orderCode
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageOrder'
  /api/customer/comment/{commentId}:
    delete:
      tags:
      - customer-controller
      operationId: deleteComment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseComment'
  /api/customer/cart/product/{productId}:
    delete:
      tags:
      - customer-controller
      operationId: removeItemFromCart
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
components:
  schemas:
    UserRequest:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
        fullName:
          type: string
        email:
          type: string
        genderEnum:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        phone:
          type: string
        dateOfBirth:
          type: string
          format: date
        roles:
          type: array
          items:
            type: string
        customer:
          type: boolean
    ApiResponseUser:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/User'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    User:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        userName:
          type: string
        fullName:
          type: string
        email:
          type: string
        genderEnum:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        phone:
          type: string
        dateOfBirth:
          type: string
          format: date
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
    SubCategoryRequest:
      type: object
      properties:
        subCateName:
          type: string
        description:
          type: string
        categoryId:
          type: integer
          format: int64
    ApiResponseSubCategory:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/SubCategory'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Category:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        categoryImageByte:
          type: array
          items:
            type: string
            format: byte
    SubCategory:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        subCateName:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    SliderRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imageName:
          type: string
    ApiResponseSlider:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Slider'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Slider:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        imageName:
          type: string
    ImageModel:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        imageName:
          type: string
        imageByte:
          type: array
          items:
            type: string
            format: byte
        type:
          type: string
    ProductRequest:
      type: object
      properties:
        name:
          type: string
        productCode:
          type: string
        parameters:
          type: string
        categoryId:
          type: integer
          format: int64
        shortDescription:
          type: string
        content:
          type: string
        actualPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        productImages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
        featureImageName:
          type: string
        featureImageByte:
          type: array
          items:
            type: string
            format: byte
        subCategoryId:
          type: integer
          format: int64
    ApiResponseProduct:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Product'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Product:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        productCode:
          type: string
        parameters:
          type: string
        content:
          type: string
        quantity:
          type: integer
          format: int32
        actualPrice:
          type: number
          format: double
        shortDescription:
          type: string
        featureImageName:
          type: string
        featureImageByte:
          type: array
          items:
            type: string
            format: byte
        productImages:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ImageModel'
        subCategory:
          $ref: '#/components/schemas/SubCategory'
        category:
          $ref: '#/components/schemas/Category'
    OrderRequest:
      type: object
      properties:
        shippingMethodId:
          type: integer
          format: int64
        paymentMethodEnum:
          type: string
          enum:
          - ONLINE_PAYING
          - DELIVERY_PAYING
        cardNumber:
          type: string
        cardOwner:
          type: string
        month:
          type: string
        year:
          type: string
        addressId:
          type: integer
          format: int64
        orderStatusEnum:
          type: string
          enum:
          - WAITING_PROCESS
          - WAITING_DELIVERY
          - SUCCESS
          - CANCEL
        deliveryDate:
          type: string
          format: date
        receiverName:
          type: string
        phone:
          type: string
        email:
          type: string
        city:
          type: string
        district:
          type: string
        subDistrict:
          type: string
        specificAddress:
          type: string
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        receiverName:
          type: string
        phone:
          type: string
        email:
          type: string
        city:
          type: string
        district:
          type: string
        subDistrict:
          type: string
        specificAddress:
          type: string
        default:
          type: boolean
    ApiResponseOrder:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Order'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CardPayment:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        cardNumber:
          type: string
        cardOwner:
          type: string
        month:
          type: string
        year:
          type: string
    Customer:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        userName:
          type: string
        fullName:
          type: string
        email:
          type: string
        genderEnum:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        phone:
          type: string
        dateOfBirth:
          type: string
          format: date
        role:
          type: string
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        invoiceSymbol:
          type: string
        taxNumber:
          type: string
        taxAuthoritiesCode:
          type: string
        orderCode:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        total:
          type: number
          format: double
        status:
          type: string
          enum:
          - WAITING_PROCESS
          - WAITING_DELIVERY
          - SUCCESS
          - CANCEL
        deliveryDate:
          type: string
          format: date
        orderDate:
          type: string
          format: date
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethod'
        cardPayment:
          $ref: '#/components/schemas/CardPayment'
        paymentMethodEnum:
          type: string
          enum:
          - ONLINE_PAYING
          - DELIVERY_PAYING
        address:
          $ref: '#/components/schemas/Address'
        orderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'
    OrderDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int32
        orderItemPrice:
          type: number
          format: double
    ShippingMethod:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shippingMethod:
          type: string
        price:
          type: number
          format: double
    ApiResponseObject:
      type: object
      properties:
        result:
          type: object
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    AddressRequest:
      type: object
      properties:
        receiverName:
          type: string
        phone:
          type: string
        email:
          type: string
        city:
          type: string
        district:
          type: string
        subDistrict:
          type: string
        specificAddress:
          type: string
        levant:
          type: boolean
    CustomerRequest:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
        genderEnum:
          type: string
          enum:
          - MALE
          - FEMALE
          - OTHER
        phone:
          type: string
        dateOfBirth:
          type: string
          format: date
        addressId:
          type: integer
          format: int64
        addressRequest:
          $ref: '#/components/schemas/AddressRequest'
    ApiResponseCustomer:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Customer'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CartItem:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          format: int32
        itemPrice:
          type: number
          format: double
    ApiResponseListCartItem:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponseAddress:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Address'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        categoryImageByte:
          type: array
          items:
            type: string
            format: byte
    ApiResponseCategory:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Category'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    BannerRequest:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
        imageName:
          type: string
    ApiResponseBanner:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Banner'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Banner:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        name:
          type: string
        content:
          type: string
        imageName:
          type: string
    CommentRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        content:
          type: string
    ApiResponseComment:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Comment'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        dateCreate:
          type: string
          format: date
        customer:
          $ref: '#/components/schemas/Customer'
    CartItemRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    ApiResponseShoppingSession:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ShoppingSession'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ShoppingSession:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        total:
          type: number
          format: double
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ApiResponseJwtResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/JwtResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    JwtResponse:
      type: object
      properties:
        jwtToken:
          type: string
        id:
          type: integer
          format: int64
        username:
          type: string
        roles:
          type: array
          items:
            type: string
    ApiResponsePageUser:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageUser'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageUser:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    ApiResponseListProductTopSellerInterface:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductTopSellerInterface'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ProductTopSellerInterface:
      type: object
      properties:
        name:
          type: string
        actualPrice:
          type: number
          format: double
        totalAmount:
          type: integer
          format: int32
    ApiResponsePageSubCategory:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageSubCategory'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageSubCategory:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SubCategory'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponsePageOrder:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageOrder'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageOrder:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponseStatisticValueResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/StatisticValueResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    StatisticValueResponse:
      type: object
      properties:
        saleStatistic:
          type: array
          items:
            type: number
            format: double
        orderStatistic:
          type: array
          items:
            type: integer
            format: int32
    ApiResponseListCountOrderResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/CountOrderResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CountOrderResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - WAITING_PROCESS
          - WAITING_DELIVERY
          - SUCCESS
          - CANCEL
        quantity:
          type: integer
          format: int32
        totalAll:
          type: number
          format: double
    ApiResponsePageSlider:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageSlider'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageSlider:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Slider'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponsePageRole:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageRole'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageRole:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponseStatisticQuantityResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/StatisticQuantityResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    StatisticQuantityResponse:
      type: object
      properties:
        productQuantity:
          type: integer
          format: int32
        customerQuantity:
          type: integer
          format: int32
        orderQuantity:
          type: integer
          format: int32
        revenue:
          type: number
          format: double
    ApiResponsePageProduct:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageProduct'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageProduct:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponseListProduct:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponsePageCustomer:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageCustomer'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageCustomer:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponsePageComment:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageComment'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageComment:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponseListNotification:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    Notification:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        message:
          type: string
        order:
          $ref: '#/components/schemas/Order'
    ApiResponseCustomCustomerResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CustomCustomerResponse'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    CustomCustomerResponse:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    ApiResponseDouble:
      type: object
      properties:
        result:
          type: number
          format: double
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponseListAddress:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponsePageCategory:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageCategory'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageCategory:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApiResponseListSubCategory:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/SubCategory'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    ApiResponsePageBanner:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageBanner'
        errorCode:
          type: string
        message:
          type: object
        responseCode:
          type: integer
          format: int32
    PageBanner:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Banner'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
